name: Deploy to Firebase Hosting on push
"on":
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  checkout_install_build_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Make a POST request on process initation
        run: |
          curl -X POST 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history' \
            -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d '{ "id": ${{ github.run_id }}, "deployment_status": "Syncing repository" }'

      - name: checkout-repo
        uses: actions/checkout@v4

      - name: Make a PATCH request when the dependency installation has started
        run: |
          curl -X PATCH 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history?id=eq.${{github.run_id}}' \
            -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d '{ "deployment_status": "Preparing production environment, installing dependencies" }'

      - name: install-dependencies
        run: npm install

      - name: Make a PATCH request when the build process has started
        run: |
          curl -X PATCH 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history?id=eq.${{github.run_id}}' \
            -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d '{ "deployment_status": "Building application for the deployment" }'

      - name: build
        env:
          REACT_APP_SUPABASE_URL: ${{secrets.REACT_APP_SUPABASE_URL}}
          REACT_APP_SUPABASE_KEY: ${{secrets.REACT_APP_SUPABASE_KEY}}
          CI: false
        run: npm run build

      - name: Make a PATCH request when deployment to firebase is started
        run: |
          curl -X PATCH 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history?id=eq.${{github.run_id}}' \
            -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d '{ "deployment_status": "Deploying to Firebase" }'

      - name: deploy-firebase
        id: deploy-firebase
        uses: ipaul1996/firebase-deploy-action@v1.4
        with:
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_IP_RISINGSTAR }}"
          deploymentType: preview
          # deployTarget: "git-workflow-test-app"
      - name: Save deployment details to file
        run: echo "${{ steps.deploy-firebase.outputs.deployment_details }}" > deployment_details.json
    # outputs:
    #   deployment_details: ${{ toJSON(steps.deploy-firebase.outputs.deployment_details) }}
      # deployment_type: ${{ steps.deploy-firebase.outputs.deployment_type }}
      # preview_expires: ${{ steps.deploy-firebase.outputs.preview_expires }}

  post_request_on_deployment_failure:
    needs: checkout_install_build_deploy
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Make PATCH request on deployment failure
        run: |
          curl -X PATCH 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history?id=eq.${{github.run_id}}' \
            -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d '{ "deployment_status": "Failed to deploy the application" }'

  post_request_on_deployment_success:
    needs: checkout_install_build_deploy
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Read deployment details from file
        id: read_deployment_details
        run: echo "::set-output name=deployment_details::$(cat deployment_details.json)"
      
      - name: Use deployment details
        run: |
          # Access the deployment_details output from the previous step
          echo "Deployment details: ${{ steps.read_deployment_details.outputs.deployment_details }}"

      - name: Make PATCH request on successful deployment
        run: |
          # curl -X PATCH 'https://qbcybijsurnlebeyrere.supabase.co/rest/v1/deployment_history?id=eq.${{github.run_id}}' \
          #   -H "apikey: ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
          #   -H "Authorization: Bearer ${{secrets.SUPABASE_SERVICE_ROLE_TOKEN}}" \
          #   -H "Content-Type: application/json" \
          #   -H "Prefer: return=minimal" \
          #   -d '{ "deployment_status": "Deployment successful", "deployment_type": "${{needs.checkout_install_build_deploy.outputs.deployment_type}}", "deploy_url": "${{needs.checkout_install_build_deploy.outputs.deploy_url}}", "preview_expires": "${{needs.checkout_install_build_deploy.outputs.preview_expires}}" }'
          # Create a shell variable to hold the JSON payload with conditional assignment
          
          