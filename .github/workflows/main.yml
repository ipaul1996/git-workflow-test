name: Deploy to Firebase Hosting on push
"on":
  push:
    branches:
      - main
  # workflow_dispatch:

jobs:
  checkout_install_build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout-repo
        uses: actions/checkout@v4
      - name: install-dependencies
        run: npm install
      - name: build
        env:
          REACT_APP_SUPABASE_URL: ${{secrets.REACT_APP_SUPABASE_URL}}
          REACT_APP_SUPABASE_KEY: ${{secrets.REACT_APP_SUPABASE_KEY}}
          # REACT_APP_SECRET_GITHUB_TOKEN: ${{secrets.AUTH_TOKEN}}
          CI: false
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: checkout_install_build
    steps:
      - name: deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_IP_RISINGSTAR }}"
          channelId: live
          projectId: ip-risingstar
          entryPoint: firebase.json

  post_request_on_deployment_failure:
    needs: deploy
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Make POST request on deployment failure
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{"message": "Deployment failed", "run_id": "${{ github.run_id }}"}' \
            https://webhook.site/a2598719-58c2-48e6-b1dc-1044bcd27a07

  post_request_on_deployment_success:
    needs: deploy
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Make POST request on successful deployment
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{"message": "Deployment successful", "run_id": "${{ github.run_id }}"}' \
           https://webhook.site/a2598719-58c2-48e6-b1dc-1044bcd27a07
